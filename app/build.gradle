apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    useLibrary 'org.apache.http.legacy'

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "cn.ehanmy"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        multiDexEnabled true
        multiDexKeepProguard file('multiDexKeep.pro') // keep specific classes using proguard syntax
        flavorDimensions "versionCode"
    }

    signingConfigs {
        release {
            storeFile file('ehanmy.keystore')
            storePassword "ehanmy.cn"
            keyAlias "ehanmy"
            keyPassword "ehanmy.cn"
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            buildConfigField "String", "TAG", "\"(2018111301)\""
//            buildConfigField "String", "API_HOST", "\"http://sj.ehanmy.cn/ehanmy/\""
            buildConfigField "String", "API_HOST", "\"http://api.donhonet.net/ehanmy/\""
//            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            buildConfigField "String", "TAG", "\"(2018111301)\""
            buildConfigField "String", "API_HOST", "\"http://sj.ehanmy.cn/ehanmy/\""
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

//        prerelease {
//            buildConfigField "boolean", "LOG_DEBUG", "false"
//            buildConfigField "boolean", "USE_CANARY", "false"
//            buildConfigField "String", "API_HOST", "\"http://stage.ehanmy.cn/ehanmy\""
//            signingConfig signingConfigs.release
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
    }
    sourceSets { // 从ANT迁移的工程，可以使用 sourceSets 来配置工程结构.
        main {
            jniLibs.srcDirs = ['libs'] // 配置此处才会打包jni 的.so 文件
        }
    }

    productFlavors {
        android_yybao {}
        android_vivo {}
        android_xioami {}
        android_huawei {}
        android_oppo {}
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
    //给apk添加对应的版本号：
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "app-${name}-${defaultConfig.versionName}.apk"
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.dependencies["banner"]
    implementation rootProject.ext.dependencies["extendedRecyclerView"]
    implementation rootProject.ext.dependencies["flowlayout"]
    implementation rootProject.ext.dependencies['pickerview']
    implementation rootProject.ext.dependencies['countdownview']
    implementation rootProject.ext.dependencies['actionsheet']
    implementation rootProject.ext.dependencies['multidex']
    implementation rootProject.ext.dependencies['photoview']
    implementation rootProject.ext.dependencies['wechat']
    implementation rootProject.ext.dependencies['location']
    implementation rootProject.ext.dependencies['emoji']
    implementation rootProject.ext.dependencies['qiniu']


    //tools
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    implementation rootProject.ext.dependencies["progressmanager"]
    implementation rootProject.ext.dependencies["retrofit-url-manager"]
    implementation rootProject.ext.dependencies["lifecyclemodel"]
    implementation rootProject.ext.dependencies["bottomBarLayout"]

    //view
    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {
        exclude module: 'support-annotations'
    }
    implementation rootProject.ext.dependencies["paginate"]
    //arms
    implementation project(':arms')
    //Github 仓库上最新的 Demo 具有下一个版本的新特性, 所以依赖最新的远程库会出现版本不兼容的情况, 详情请查看 https://github.com/JessYanCoding/MVPArms/wiki/Issues#2
//    implementation 'me.jessyan:arms:2.4.1'
    //test
    debugImplementation rootProject.ext.dependencies["canary-debug"]
    releaseImplementation rootProject.ext.dependencies["canary-release"]
}
